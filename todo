build downsampling into the data objects, by making a separate iterable.

Parameters for training: figure out who belongs in data, model, both, neither

      size <Int>
          Set size of word vectors; default is 100 (lives in model)

      window <Int>
          Set max skip length between words; default is 5 (lives in data)

      sample <AbstractFloat>
          Set threshold for occurrence of words. Those that appear with
          higher frequency in the training data will be randomly
          down-sampled; default is 1e-5. (lives in downsampling iterator wrapper)

      negative <Int>
          Number of negative examples; default is 0, common values are
          5 - 10 (0 = not used) (don't konw how to implement?  maybe in callback?)

      min_count <Int>
          This will discard words that appear less than <Int> times; default
          is 5 (lives in data)

      cbow <Int>
          Use the continuous back of words model; default is 1 (skip-gram
          model) (lives in data and model)
